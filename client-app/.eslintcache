[{"D:\\Documents\\Projects\\foundmovie\\client-app\\src\\index.tsx":"1","D:\\Documents\\Projects\\foundmovie\\client-app\\src\\App.tsx":"2","D:\\Documents\\Projects\\foundmovie\\client-app\\src\\Components\\NavBar.tsx":"3","D:\\Documents\\Projects\\foundmovie\\client-app\\src\\Components\\MovieList.tsx":"4","D:\\Documents\\Projects\\foundmovie\\client-app\\src\\stores\\store.Movie.ts":"5","D:\\Documents\\Projects\\foundmovie\\client-app\\src\\api\\agent.ts":"6","D:\\Documents\\Projects\\foundmovie\\client-app\\src\\Components\\MovieShortDetails.tsx":"7","D:\\Documents\\Projects\\foundmovie\\client-app\\src\\Components\\SearchBox.tsx":"8","D:\\Documents\\Projects\\foundmovie\\client-app\\src\\Components\\MovieDetails.tsx":"9","D:\\Documents\\Projects\\foundmovie\\client-app\\src\\api\\helpers.ts":"10","D:\\Documents\\Projects\\foundmovie\\client-app\\src\\api\\youTubeAgent.ts":"11"},{"size":406,"mtime":1611316746753,"results":"12","hashOfConfig":"13"},{"size":840,"mtime":1611058718637,"results":"14","hashOfConfig":"13"},{"size":534,"mtime":1611058986650,"results":"15","hashOfConfig":"13"},{"size":948,"mtime":1611242845700,"results":"16","hashOfConfig":"13"},{"size":3903,"mtime":1611246848994,"results":"17","hashOfConfig":"13"},{"size":1094,"mtime":1611246609679,"results":"18","hashOfConfig":"13"},{"size":1553,"mtime":1611065081585,"results":"19","hashOfConfig":"13"},{"size":822,"mtime":1611051741717,"results":"20","hashOfConfig":"13"},{"size":7267,"mtime":1611317293685,"results":"21","hashOfConfig":"13"},{"size":509,"mtime":1611245116513,"results":"22","hashOfConfig":"13"},{"size":1110,"mtime":1611248572986,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1r91yjr",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},"D:\\Documents\\Projects\\foundmovie\\client-app\\src\\index.tsx",[],"D:\\Documents\\Projects\\foundmovie\\client-app\\src\\App.tsx",[],["50","51"],"D:\\Documents\\Projects\\foundmovie\\client-app\\src\\Components\\NavBar.tsx",[],"D:\\Documents\\Projects\\foundmovie\\client-app\\src\\Components\\MovieList.tsx",[],"D:\\Documents\\Projects\\foundmovie\\client-app\\src\\stores\\store.Movie.ts",[],"D:\\Documents\\Projects\\foundmovie\\client-app\\src\\api\\agent.ts",["52"],"import axios, { AxiosResponse } from 'axios';\r\nimport Movie from '../Models/Movie';\r\nimport { MoviesResult } from '../Models/MoviesResult';\r\n\r\nconst IMDBBaseURL = \"http://www.omdbapi.com/\";\r\n\r\nconst responseBody = (response: AxiosResponse) => response.data;\r\nconst IMDBapiKey = '?apikey=5fa84309';\r\n\r\nconst sleep = (ms: number) => (response: AxiosResponse) =>\r\n    new Promise<AxiosResponse>(resolve => setTimeout(() => resolve(response), ms));\r\n\r\nconst requests = {\r\n    get: (url: string) => axios.get(IMDBBaseURL + url).then(sleep(1000)).then(responseBody),\r\n    post: (url: string, body: {}) => axios.post(IMDBBaseURL + url, body).then(responseBody),\r\n    put: (url: string, body: {}) => axios.put(IMDBBaseURL + url, body).then(responseBody),\r\n    del: (url: string) => axios.delete(IMDBBaseURL + url).then(responseBody),\r\n}\r\n\r\nconst Movies = {\r\n    list: (query: string, page: number): Promise<MoviesResult> => requests.get(`${IMDBapiKey}&s=${query}&page=${page}`),\r\n    details: (id: string): Promise<Movie> => requests.get(`${IMDBapiKey}&i=${id}`),\r\n}\r\n\r\nexport default {\r\n    Movies,\r\n}","D:\\Documents\\Projects\\foundmovie\\client-app\\src\\Components\\MovieShortDetails.tsx",[],"D:\\Documents\\Projects\\foundmovie\\client-app\\src\\Components\\SearchBox.tsx",["53","54"],"import { observer } from \"mobx-react-lite\";\r\nimport { FormEvent, Fragment, useContext } from \"react\";\r\nimport { Icon, Input } from \"semantic-ui-react\";\r\nimport MoviesStore from \"../stores/store.Movie\";\r\n\r\nconst SearchBox = () => {\r\n  const moviesStore = useContext(MoviesStore);\r\n\r\n  const handleInputChange = (\r\n    event: FormEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) => {\r\n    const { value } = event.currentTarget;\r\n    moviesStore.setSearchQuery(value);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Input\r\n        placeholder=\"Search...\"\r\n        onChange={handleInputChange}\r\n        action={{\r\n          type: \"submit\",\r\n          content: <Icon name=\"search\" />,\r\n          onClick: () => moviesStore.searchMovies(),\r\n        }}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default observer(SearchBox);\r\n","D:\\Documents\\Projects\\foundmovie\\client-app\\src\\Components\\MovieDetails.tsx",["55","56","57"],"D:\\Documents\\Projects\\foundmovie\\client-app\\src\\api\\helpers.ts",[],"D:\\Documents\\Projects\\foundmovie\\client-app\\src\\api\\youTubeAgent.ts",["58"],"import axios, { AxiosResponse } from 'axios';\r\nimport { IYouTubeResult } from '../Models/IYouTubeResult';\r\n\r\nconst YouTubeApiBaseURL = \"https://www.googleapis.com/youtube/v3/search/\";\r\n\r\nconst responseBody = (response: AxiosResponse) => response.data;\r\nconst youtubeApiKey = 'AIzaSyCXwcnpNU-6tmpgGJ9dMDrZbgEOtPTP86Y';\r\nconst queryWithApiKeyYouTube = `?key=${youtubeApiKey}`;\r\n\r\nconst sleep = (ms: number) => (response: AxiosResponse) =>\r\n    new Promise<AxiosResponse>(resolve => setTimeout(() => resolve(response), ms));\r\n\r\nconst requests = {\r\n    get: (url: string) => axios.get(YouTubeApiBaseURL + url).then(sleep(1000)).then(responseBody),\r\n    post: (url: string, body: {}) => axios.post(YouTubeApiBaseURL + url, body).then(responseBody),\r\n    put: (url: string, body: {}) => axios.put(YouTubeApiBaseURL + url, body).then(responseBody),\r\n    del: (url: string) => axios.delete(YouTubeApiBaseURL + url).then(responseBody),\r\n}\r\n\r\nconst YouTube = {\r\n    search: (query: string): Promise<IYouTubeResult> => requests.get(`${queryWithApiKeyYouTube}&q=${query}&type=video`)\r\n}\r\n\r\nexport default {\r\n    YouTube\r\n}",{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":25,"column":1,"nodeType":"65","endLine":27,"endColumn":2},{"ruleId":"66","severity":1,"message":"67","line":3,"column":10,"nodeType":"68","messageId":"69","endLine":3,"endColumn":16},{"ruleId":"66","severity":1,"message":"70","line":12,"column":13,"nodeType":"68","messageId":"69","endLine":12,"endColumn":17},{"ruleId":"66","severity":1,"message":"67","line":5,"column":3,"nodeType":"68","messageId":"69","endLine":5,"endColumn":9},{"ruleId":"66","severity":1,"message":"71","line":27,"column":29,"nodeType":"68","messageId":"69","endLine":27,"endColumn":50},{"ruleId":"72","severity":1,"message":"73","line":31,"column":6,"nodeType":"74","endLine":31,"endColumn":17,"suggestions":"75"},{"ruleId":"63","severity":1,"message":"64","line":24,"column":1,"nodeType":"65","endLine":26,"endColumn":2},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","@typescript-eslint/no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'name' is assigned a value but never used.","'searchYouTubeTrailers' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'match.params.id'. Either include it or remove the dependency array.","ArrayExpression",["78"],"no-global-assign","no-unsafe-negation",{"desc":"79","fix":"80"},"Update the dependencies array to be: [loadMovie, match.params.id]",{"range":"81","text":"82"},[761,772],"[loadMovie, match.params.id]"]